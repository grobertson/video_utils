#!/usr/bin/env python
if __name__ == "__main__":
  import argparse;
  from video_utils.Plex_DVR_PostProcess import Plex_DVR_PostProcess;

  parser = argparse.ArgumentParser(description="Plex DVR Post Processor");           # Set the description of the script to be printed in the help doc, i.e., ./script -h
  parser.add_argument("in_file",               type   = str,          help = "Input file to process"); 
  parser.add_argument("-l", "--logdir",        type   = str,          help = "Log file directory. Default: Same as input file"); 
  parser.add_argument("-t", "--threads",       type   = int,          help = "Set number of CPUs to use. Default: Half the number of CPUs available");  
  parser.add_argument("-c", "--cpulimit",      type   = int,          help = "Set to limit CPU usage. Set to 0 to disable CPU limiting. Default is 75 percent per thread.");
  parser.add_argument("--language",            type   = str,          help = "Set audio and subtitle language(s) using three (3) character codes (ISO 639-2). For multiple langauges, seperate using commas. Default: eng for English");
  parser.add_argument("-v", "--verbose",       action = "store_true", help = "Increase verbosity");
  parser.add_argument("--no-remove",           action = "store_true", help = "Set to remove input file after transcode");
  parser.add_argument("--no-srt",              action = "store_true", help = "Set to convert VobSub(s) to SRT");
  args = parser.parse_args();                                                   # Parse the arguments
  status = Plex_DVR_PostProcess(args.in_file, 
     logdir    = args.logdir, 
     threads   = args.threads, 
     cpulimit  = args.cpulimit,
     language  = args.language,
     verbose   = args.verbose,
     no_remove = args.no_remove,
     not_srt   = args.no_srt);
  exit( status );  
